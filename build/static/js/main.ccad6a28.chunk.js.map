{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","newName","onNameChange","newNumber","onNumberChange","onSubmit","type","Persons","persons","searchPersons","deleteUser","personsFilter","filter","person","name","toLowerCase","indexOf","console","log","map","key","number","onClick","id","baseUrl","axios","get","then","response","data","personObject","post","put","delete","Notification","isNotificationVisible","notificationMessage","isError","notificationStyle","color","backgroundColor","padding","margin","border","errorNotificationStyle","style","App","useState","setPersons","setNewName","setNewNumber","setSearchPersons","setIsNotificationVisible","setNotificationMessage","setIsError","useEffect","phonebook","initialData","displayNotification","message","setTimeout","event","target","preventDefault","some","window","confirm","existingContact","find","updatedContact","catch","error","returnedContact","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccad6a28.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      Filter shown with <input value={value} onChange={onChange}></input>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({ newName, onNameChange, newNumber, onNumberChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, searchPersons, deleteUser }) => {\n  /* Map over array of objects and display name */\n  const personsFilter =\n    searchPersons === \"\"\n      ? persons\n      : persons.filter(\n          person =>\n            person.name.toLowerCase().indexOf(searchPersons.toLowerCase()) !==\n            -1\n        );\n\n  console.log(personsFilter);\n\n  //Remove a user on Click from the backend\n  //Use the axios.delete() method onClick\n  // Remove the user depending on the id of the person.id\n\n  return (\n    <>\n      {personsFilter.map(person => (\n        <p key={person.name}>\n          {person.name} {person.number}\n          <button\n            onClick={() => {\n              deleteUser(person.id, person.name);\n            }}\n          >\n            Delete\n          </button>\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = personObject => {\n  const request = axios.post(baseUrl, personObject);\n  return request.then(response => response.data);\n};\n\nconst update = (personObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject);\n  return request.then(response => response.data);\n};\n\nconst removeUser = id => {\n  return axios.delete(`http://localhost:3001/api/persons/${id}`);\n};\n\nexport default { getAll, create, update, removeUser };\n","import React from \"react\";\n\nconst Notification = ({\n  isNotificationVisible,\n  notificationMessage,\n  isError\n}) => {\n  const notificationStyle = {\n    color: \"green\",\n    backgroundColor: \"lightgrey\",\n    padding: 10,\n    margin: \"20px 2px\",\n    border: \"solid 2px green\"\n  };\n  if (isNotificationVisible === false) {\n    return null;\n  }\n\n  if (isError === true) {\n    const errorNotificationStyle = {\n      ...notificationStyle,\n      border: \"solid 2px red\",\n      color: \"red\"\n    };\n\n    return <div style={errorNotificationStyle}>{notificationMessage} </div>;\n  }\n\n  return <div style={notificationStyle}>{notificationMessage} </div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phonebook from \"./services/phonebook\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchPersons, setSearchPersons] = useState(\"\");\n  const [isNotificationVisible, setIsNotificationVisible] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  //Get persons from server\n  useEffect(() => {\n    phonebook.getAll().then(initialData => {\n      console.log(\"promise resolved\");\n      setPersons(initialData);\n    });\n  }, []);\n\n  const addPerson = event => {\n    //Add person or update existing contact on form submission\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    //Check if user already exists\n    if (\n      persons.some(\n        person => person.name.toLowerCase() === newName.toLowerCase()\n      )\n    ) {\n      //Confirm if we want to replace the old number with a put request\n      if (\n        window.confirm(\n          `${personObject.name} is already added to the phone, replace the old number with a new one?`\n        )\n      ) {\n        const existingContact = persons.find(\n          person => person.name === personObject.name\n        );\n        const updatedContact = {\n          ...existingContact,\n          number: personObject.number\n        };\n        phonebook\n          .update(updatedContact, updatedContact.id)\n          .then(updatedContact => {\n            setPersons(\n              persons.map(person =>\n                person.id !== updatedContact.id ? person : updatedContact\n              )\n            );\n            displayNotification(`User ${newName}'s phone number is updated`);\n          })\n          .catch(error => {\n            setIsError(true);\n            displayNotification(\n              `Information for ${existingContact.name} was already removed from the server`\n            );\n            setPersons(\n              persons.filter(person => person.id !== updatedContact.id)\n            );\n          });\n      }\n    } else {\n      phonebook.create(personObject).then(returnedContact => {\n        setPersons(persons.concat(returnedContact));\n        displayNotification(`User ${newName} is added to the phonebook`);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const displayNotification = message => {\n    setNotificationMessage(message);\n    setIsNotificationVisible(true);\n    setTimeout(() => {\n      setIsNotificationVisible(false);\n    }, 5000);\n  };\n\n  const deleteUser = (id, person) => {\n    if (window.confirm(`Delete ${person}?`)) {\n      phonebook.removeUser(id);\n      setPersons(persons.filter(person => person.id !== id));\n    }\n  };\n\n  //Log the value of newName every time input value changes\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  //Set number value on event change\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  // Set searchbox value on event change\n  const handleSearchChange = event => {\n    setSearchPersons(event.target.value);\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification\n        notificationMessage={notificationMessage}\n        isNotificationVisible={isNotificationVisible}\n        isError={isError}\n      ></Notification>\n      <Filter value={searchPersons} onChange={handleSearchChange}></Filter>\n      <h3> Add a new...</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        onNameChange={handleNameChange}\n        newNumber={newNumber}\n        onNumberChange={handleNumberChange}\n      ></PersonForm>\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        searchPersons={searchPersons}\n        deleteUser={deleteUser}\n      ></Persons>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}